{"name": "test_Delete_Button_Category[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Testcases.test_settingspage.Test_Settings_page object at 0x106a93880>\n\n    @allure.description(\"Delete Button Category \")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_Delete_Button_Category(self):\n        self.loginpage = Loginpage(self.driver)\n        sleep(3)\n        self.driver.execute_script(\"window.localStorage.clear();\")\n        sleep(3)\n        self.driver.execute_script(\"window.location.reload(true);\")\n        sleep(2)\n        self.driver.maximize_window()\n        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)\n        self.loginpage.do_click(Loginpage.USERNAME_FIELD)\n        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)\n        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)\n        sleep(2)\n        self.loginpage.do_click(Loginpage.ENTER_OTP)\n        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)\n        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)\n        sleep(5)\n        self.settings_page = SettingsPage(self.driver)\n        self.settings_page.do_click(SettingsPage.SETTINGS_BUTTON)\n        self.settings_page.do_click(SettingsPage.CATEGORY_TAB)\n        sleep(2)\n        # self.settings_page.do_click(SettingsPage.UPDATE_CATEGORY_DELETE_ICON)\n        self.settings_page.do_click(SettingsPage.UPDATE_CATEGORY_ACCORDION3)\n        sleep(2)\n        self.driver.execute_script(\"window.scrollBy(0,300);\")\n        sleep(2)\n>       self.settings_page.do_click(SettingsPage.DELETE_CATEGORY_BUTTON)\n\ntest_settingspage.py:567: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../Pageobjects/Basepage.py:20: in do_click\n    element = wait.until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a9b16b45eab198b60ec4e1e9b0d6c227\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x106e43b50>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "description": "Delete Button Category ", "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1690916687069, "stop": 1690916765422, "uuid": "753aab24-6792-49bd-8dd6-705c2209d3ee", "historyId": "a478614bf35a37a960d2386e4a791f6c", "testCaseId": "d40ef654a3e652137fa44218efeb7189", "fullName": "test_settingspage.Test_Settings_page#test_Delete_Button_Category", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "suite", "value": "test_settingspage"}, {"name": "subSuite", "value": "Test_Settings_page"}, {"name": "host", "value": "Shaiks-MacBook-Pro.local"}, {"name": "thread", "value": "80165-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_settingspage"}]}