from time import sleep
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from Pageobjects.Homepage import Homepage
from Pageobjects.Loginpage import Loginpage
from Pageobjects.Datasetpage import Datasetspage
from Testcases.test_base import Basetest
from Configurations.config import Testdata
from Testcases.confitest import init_driver
import allure
import allure_pytest
from selenium.webdriver.common.by import By
from allure_commons.types import AttachmentType


class Test_datasetpage(Basetest):

    @allure.description("Testing Adding Dataset")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_add_dataset(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        sleep(2)
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(2)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ADD_NEW_DATASET)
        sleep(2)
        # self.driver.execute_script("window.scrollBy(0,-400);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ADD_DATASET_NAME_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.ADD_DATASET_NAME_FIELD, Testdata.CONNECTOR_NAME)
        self.datasets_page.do_click(Datasetspage.Add_DATASET_DESCRIPTION_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.Add_DATASET_DESCRIPTION_FIELD, Testdata.CONNECTOR_DESCRIPTION)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click_constanly_updating_checkbox()
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(5)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(5)
        self.datasets_page.do_sendkeys_1()
        sleep(3)
        self.datasets_page.do_click(Datasetspage.DELETE_BUTTON)
        sleep(3)
        self.datasets_page.do_sendkeys_1()
        sleep(3)
        self.datasets_page.do_click(Datasetspage.UPLOAD_FILE)
        sleep(3)
        # self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_STANDARIZE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_FOR_STANDARIZATION)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(3)
        self.datasets_page.do_click(Datasetspage.SELECT_DATAPOINT_ATTRIBUTE_STD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_CATEGORY)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.CLEAR_DATAPOINT_ATTRIBUTE)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_DATAPOINT_ATTRIBUTE_STD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_CATEGORY)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_ATTRIBUTE_FIELD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_ATTRIBUTE)
        # sleep(2)
        self.datasets_page.do_clickable_mask()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,2200);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.APPLY_BUTTON)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        self.driver.execute_script("window.scrollBy(0,-300);")
        self.datasets_page.do_click(Datasetspage.CATEGORY_ACCORDION)
        self.datasets_page.do_clickable_CATEGORY()
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_GREOGRAPHY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_COUNTRY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FILE)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_clickable_REGISTER_USER()
        sleep(2)
        # self.driver.execute_script("window.scrollBy(0,400);")
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.APPLY_BUTTON_STD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SUBMIT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Successfully Dataset is added",
                          attachment_type=AttachmentType.PNG)
            assert True, "Successfully Dataset is added"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to add Dataset",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to add Dataset"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Adding Dataset from MySQL")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_adding_dataset_MySQL(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(2)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ADD_NEW_DATASET)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ADD_DATASET_NAME_FIELD)
        sleep(2)
        self.datasets_page.do_sendkeys(Datasetspage.ADD_DATASET_NAME_FIELD, Testdata.DATASET_NAME_MYSQL)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.Add_DATASET_DESCRIPTION_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.Add_DATASET_DESCRIPTION_FIELD, Testdata.DATASET_DESCRIPTION_MYSQL)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click_constanly_updating_checkbox()
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(3)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(3)
        self.datasets_page.do_click(Datasetspage.MySQL_TAB)
        sleep(2)
        self.datasets_page.do_click_DATABASE_NAME_FIELD()
        self.datasets_page.do_sendkeys_DATABASE_NAME_FIELD()
        sleep(2)
        self.datasets_page.do_click_USER_NAME_MYSQL_FIELD()
        self.datasets_page.do_sendkeys_USER_NAME_MYSQL_FIELD()
        sleep(2)
        self.datasets_page.do_click_PASSWORD_MYSQL_FIELD()
        self.datasets_page.do_sendkeys_PASSWORD_MYSQL_FIELD()
        sleep(2)
        self.datasets_page.do_click_DATABASE_HOST_URL_MySQL_FIELD()
        self.datasets_page.do_sendkeys_DATABASE_HOST_URL_MySQL_FIELD()
        sleep(2)
        self.datasets_page.do_click_MYSQL_PORT_FIELD()
        self.datasets_page.do_sendkeys_MYSQL_PORT_FIELD()
        sleep(2)
        self.datasets_page.do_click_MYSQL_CONNECT_BUTTON()
        sleep(3)
        self.datasets_page.do_click_SELECT_TABLE_MYSQL_FIELD()
        sleep(2)
        self.datasets_page.do_click_SELECT_TABLE_MYSQL()
        sleep(3)
        self.datasets_page.do_clickable_MYSQL_COLUMN_CHECKBOX()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click_FILE_NAME_MYSQL_IMPORT_DATA_FIELD()
        self.datasets_page.do_sendkeys_FILE_NAME_MYSQL_IMPORT_DATA_FIELD()
        sleep(2)
        self.datasets_page.do_click_IMPORT_BUTTON_MYSQL()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(3)
        self.driver.execute_script("window.scrollBy(0,-300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_STANDARIZE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_FOR_STANDARIZATION)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_DATAPOINT_ATTRIBUTE_STD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_CATEGORY)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.CLEAR_DATAPOINT_ATTRIBUTE)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_DATAPOINT_ATTRIBUTE_STD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_CATEGORY)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_ATTRIBUTE_FIELD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_ATTRIBUTE)
        # sleep(2)
        self.datasets_page.do_clickable_mask()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,700);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.APPLY_BUTTON)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.CATEGORY_ACCORDION)
        sleep(2)
        self.datasets_page.do_clickable_CATEGORY()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_GREOGRAPHY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_COUNTRY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FILE)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_clickable_REGISTER_USER()
        sleep(2)
        self.datasets_page.do_click(Datasetspage.APPLY_BUTTON_STD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SUBMIT_BUTTON)
        sleep(3)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Successfully Dataset is added",
                          attachment_type=AttachmentType.PNG)
            assert True, "Successfully Dataset is added"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to add Dataset",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to add Dataset"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed")

    @allure.description("Testing Adding Dataset from Postgres")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_adding_dataset_POSTGRES(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(2)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ADD_NEW_DATASET)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ADD_DATASET_NAME_FIELD)
        sleep(2)
        self.datasets_page.do_sendkeys(Datasetspage.ADD_DATASET_NAME_FIELD, Testdata.DATASET_NAME_POSTGRES)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.Add_DATASET_DESCRIPTION_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.Add_DATASET_DESCRIPTION_FIELD,
                                       Testdata.DATASET_DESCRIPTION_POSTGRES)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click_constanly_updating_checkbox()
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(5)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(5)
        self.datasets_page.do_click(Datasetspage.POSTGRES_TAB)
        sleep(2)

        # Postgres

        self.datasets_page.do_click_DATABASE_NAME_FIELD_Postgres()
        self.datasets_page.do_sendkeys_DATABASE_NAME_FIELD_Postgres()
        sleep(2)
        self.datasets_page.do_click_USER_NAME_POSTGRES_FIELD()
        self.datasets_page.do_sendkeys_USER_NAME_POSTGRES_FIELD()
        sleep(2)
        self.datasets_page.do_click_PASSWORD_POSTGRES_FIELD()
        self.datasets_page.do_sendkeys_PASSWORD_POSTGRES_FIELD()
        sleep(2)
        self.datasets_page.do_click_DATABASE_HOST_URL_POSTGRES_FIELD()
        self.datasets_page.do_sendkeys_DATABASE_HOST_URL_POSTGRES_FIELD()
        sleep(2)
        self.datasets_page.do_click_POSTGRES_PORT_FIELD()
        self.datasets_page.do_sendkeys_POSTGRES_PORT_FIELD()
        sleep(2)
        self.datasets_page.do_click_POSTGRES_CONNECT_BUTTON()
        sleep(3)
        self.datasets_page.do_click_SELECT_TABLE_POSTGRES_FIELD()
        sleep(2)
        self.datasets_page.do_click_SELECT_TABLE_POSTGRES()
        sleep(3)
        self.datasets_page.do_clickable_POSTGRES_COLUMN_CHECKBOX()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click_FILE_NAME_POSTGRES_IMPORT_DATA_FIELD()
        self.datasets_page.do_sendkeys_FILE_NAME_POSTGRES_IMPORT_DATA_FIELD()
        sleep(2)
        self.datasets_page.do_click_IMPORT_BUTTON_POSTGRES()
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(5)
        self.datasets_page.do_click(Datasetspage.FILE_STANDARIZE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_FOR_STANDARIZATION)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_DATAPOINT_ATTRIBUTE_STD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_CATEGORY)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.CLEAR_DATAPOINT_ATTRIBUTE)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_DATAPOINT_ATTRIBUTE_STD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_CATEGORY)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_ATTRIBUTE_FIELD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_ATTRIBUTE)
        # sleep(2)
        self.datasets_page.do_clickable_mask()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,700);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.APPLY_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.CATEGORY_ACCORDION)
        sleep(2)
        self.datasets_page.do_clickable_CATEGORY()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_GREOGRAPHY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_COUNTRY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FILE)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_clickable_REGISTER_USER()
        sleep(2)
        self.datasets_page.do_click(Datasetspage.APPLY_BUTTON_STD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SUBMIT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Successfully Dataset is added",
                          attachment_type=AttachmentType.PNG)
            assert True, "Successfully Dataset is added"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to add Dataset",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to add Dataset"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed")

    @allure.description("Testing Adding Dataset from Rest_API")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_adding_dataset_REST_API(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(2)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ADD_NEW_DATASET)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ADD_DATASET_NAME_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.ADD_DATASET_NAME_FIELD, Testdata.DATASET_NAME_REST_API)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.Add_DATASET_DESCRIPTION_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.Add_DATASET_DESCRIPTION_FIELD,
                                       Testdata.DATASET_DESCRIPTION_REST_API)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click_constanly_updating_checkbox()
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(5)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(5)
        self.datasets_page.do_click(Datasetspage.REST_API_TAB)
        sleep(2)
        #
        # NO_AUTH
        self.datasets_page.do_click(Datasetspage.API_URL_FIELD)
        sleep(2)
        self.datasets_page.do_sendkeys(Datasetspage.API_URL_FIELD, Testdata.GET_API_URL_NOAUTH)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.AUTH_TYPE_FIELD)
        self.datasets_page.do_click(Datasetspage.NO_AUTH_OPTION)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD)
        sleep(2)
        self.datasets_page.do_sendkeys(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD, Testdata.FILE_NAME_NOAUTH)
        self.datasets_page.do_click(Datasetspage.IMPORT_REST_API_BUTTON)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.POSTGRES_TAB)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.REST_API_TAB)
        sleep(2)

        # # API_KEY
        #
        self.datasets_page.do_click(Datasetspage.API_URL_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.API_URL_FIELD, Testdata.GET_API_URL_API_KEY)
        self.datasets_page.do_click(Datasetspage.AUTH_TYPE_FIELD)
        self.datasets_page.do_click(Datasetspage.API_KEY_OPTION)
        self.datasets_page.do_click(Datasetspage.API_KEY_NAME_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.API_KEY_NAME_FIELD, Testdata.API_KEY_NAME)
        self.datasets_page.do_click(Datasetspage.KEY_KEY_VALUE_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.KEY_KEY_VALUE_FIELD, Testdata.API_KEY_VALUE)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD, Testdata.FILE_NAME_API_KEY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.IMPORT_REST_API_BUTTON)
        sleep(10)
        self.datasets_page.do_click(Datasetspage.POSTGRES_TAB)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.REST_API_TAB)
        sleep(2)

        # BEARER
        self.datasets_page.do_click(Datasetspage.API_URL_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.API_URL_FIELD, Testdata.GET_API_URL_BEARER)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.AUTH_TYPE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.BEARER_OPTION)
        self.datasets_page.do_click(Datasetspage.AUTH_TOKEN_FIELD)
        sleep(2)
        text = self.datasets_page.get_AUTH_TOKEN()
        self.datasets_page.do_sendkeys(Datasetspage.AUTH_TOKEN_FIELD, text.replace('"', ''))
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD)
        self.datasets_page.do_sendkeys(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD, Testdata.FILE_NAME_BEARER)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.IMPORT_REST_API_BUTTON)
        sleep(3)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        self.driver.execute_script("window.scrollBy(0,-300);")
        self.datasets_page.do_click(Datasetspage.CATEGORY_ACCORDION)
        self.datasets_page.do_clickable_CATEGORY()
        self.driver.execute_script("window.scrollBy(0,700);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_GREOGRAPHY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_COUNTRY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FILE)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_clickable_REGISTER_USER()
        sleep(2)
        self.datasets_page.do_click(Datasetspage.APPLY_BUTTON_STD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SUBMIT_BUTTON)
        sleep(3)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Successfully Dataset is added",
                          attachment_type=AttachmentType.PNG)
            assert True, "Successfully Dataset is added"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to add Dataset",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to add Dataset"

    @allure.description("Testing Dataset list view is visible")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Dataset_List_View(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.LIST_VIEW_BUTTON)
        sleep(3)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Dataset list view is visible",
                          attachment_type=AttachmentType.PNG)
            assert True, "Dataset list view is visible"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Dataset view is invisible",
                          attachment_type=AttachmentType.PNG)
            assert False, "Dataset list view is invisible"

        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed")

    @allure.description("Testing Add Dataset button is visible")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Add_Dataset_Button_List_View(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.LIST_VIEW_BUTTON)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ADD_NEW_BUTTON_LIST_VIEW)
        sleep(2)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets/add":
            allure.attach(self.driver.get_screenshot_as_png(), name="Add Dataset button list view is visible",
                          attachment_type=AttachmentType.PNG)
            assert True, "Add Dataset button list view is visible"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Add Dataset button view is invisible",
                          attachment_type=AttachmentType.PNG)
            assert False, "Add Dataset button list view is invisible"

        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed")

    @allure.description("Testing Edit Dataset button is visible")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Edit_Dataset_Button(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FIRST_DATASET)
        sleep(5)
        self.datasets_page.do_click(Datasetspage.EDIT_DATASET)
        sleep(3)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(5)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(5)
        # self.datasets_page.do_click(Datasetspage.DELETE_BUTTON)
        # sleep(3)
        self.datasets_page.do_sendkeys_edit_dataset()
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_FILE)
        sleep(3)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_STANDARIZE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILE_FOR_STANDARIZATION)
        sleep(3)
        self.driver.execute_script("window.scrollBy(0,400);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_DATAPOINT_ATTRIBUTE_STD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_CATEGORY_2)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.CLEAR_DATAPOINT_ATTRIBUTE)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_DATAPOINT_ATTRIBUTE_STD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_CATEGORY_2)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_ATTRIBUTE_FIELD)
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.DATAPOINT_ATTRIBUTE)
        # sleep(2)
        self.datasets_page.do_clickable_mask()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,1400);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.APPLY_BUTTON)
        sleep(5)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-300);")
        self.datasets_page.do_click(Datasetspage.CATEGORY_ACCORDION)
        self.datasets_page.do_clickable_CATEGORY()
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_GREOGRAPHY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_COUNTRY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_STATE)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SELECT_CITY)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FIELD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.UPLOAD_POLICY_FILE)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_clickable_REGISTER_USER()
        sleep(2)
        # self.driver.execute_script("window.scrollBy(0,400);")
        # sleep(2)
        self.datasets_page.do_click(Datasetspage.APPLY_BUTTON_STD)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SUBMIT_BUTTON)
        sleep(3)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Successfully Dataset is updated",
                          attachment_type=AttachmentType.PNG)
            assert True, "Successfully Dataset is updated"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to update Dataset",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to update Dataset"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Download Dataset is visible")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Downlaod_Dataset_Button(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FIRST_DATASET)
        sleep(5)
        self.driver.execute_script("window.scrollBy(0,700);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.ACCORDION_UPLOADED_FILES)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DOWNLOAD_UPLOADED_FILES)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DATASET_TAB)
        sleep(2)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Successfully Dataset file is downloaded",
                          attachment_type=AttachmentType.PNG)
            assert True, "Successfully Dataset file is downloaded"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to download dataset file",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to download dataset file"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Delete dataset button is visible")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Delete_Dataset_Button(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.SECOND_DATASET)
        sleep(5)
        self.datasets_page.do_click(Datasetspage.DELETE_DATASET)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.CONFIRM_DELETE_BUTTON)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DATASET_TAB)
        sleep(2)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Successfully Dataset file is downloaded",
                          attachment_type=AttachmentType.PNG)
            assert True, "Successfully Dataset file is downloaded"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to download dataset file",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to download dataset file"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Back_Button is visible")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Back_Button(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,500);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FIRST_DATASET)
        sleep(5)
        self.driver.execute_script("window.scrollBy(0,1000);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.BACK_BUTTON)
        sleep(2)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Back button is visible in dataset details",
                          attachment_type=AttachmentType.PNG)
            assert True, "Back button is visible in dataset details"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Back button is invisible in dataset details",
                          attachment_type=AttachmentType.PNG)
            assert False, "Back button is invisible in dataset details"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Load_More Button is visible")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Load_more_Button(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.loginpage.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,1000);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DATASETS_LOAD_MORE_BUTTON)
        sleep(3)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Back button is visible in dataset details",
                          attachment_type=AttachmentType.PNG)
            assert True, "Back button is visible in dataset details"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Back button is invisible in dataset details",
                          attachment_type=AttachmentType.PNG)
            assert False, "Back button is invisible in dataset details"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Search input for datasets is visible")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Search_input_field(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_sendkeys(Datasetspage.SEARCH_DATASET, Testdata.SEARCH_INPUT_TEXT)
        sleep(4)

        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Input field for dataset search is functional",
                          attachment_type=AttachmentType.PNG)
            assert True, "Input field for dataset search is functional"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Input field for dataset search is not functional",
                          attachment_type=AttachmentType.PNG)
            assert False, "Input field for dataset search is not functional"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Search datasets by geography")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Search_Datasets_By_Geography(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_GEOGRAPHY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_COUNTRY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_SELECT_COUNTRY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_STATE)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_SELECT_STATE)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_CITY)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_SELECT_CITY)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,600);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.CANCEL_CITY)
        sleep(5)
        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Filter dataset by geography is successful",
                          attachment_type=AttachmentType.PNG)
            assert True, "Filter by geography is successful"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to filter dataset by geography",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to filter dataset by geography"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Search datasets by Category")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Search_Datasets_By_Category(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_CATEGORY)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click_checkbox_filter_Subcategories()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.CANCEL_CITY)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-200);")
        sleep(3)
        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Filter dataset by catgeory is successful",
                          attachment_type=AttachmentType.PNG)
            assert True, "Filter dataset by catgeory is successful"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to filter catgeory by catgeory",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to filter dataset by catgeory"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Search datasets by Date")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Search_Datasets_By_Date(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_DATE)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FROM_DATE_FIELD_FILTER)
        sleep(2)
        self.datasets_page.do_sendkeys(Datasetspage.FROM_DATE_FIELD_FILTER, Testdata.FILTER_START_DATE)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.END_DATE_FIELD_FILTER)
        sleep(2)
        self.datasets_page.do_sendkeys(Datasetspage.FROM_DATE_FIELD_FILTER, Testdata.FILTER_END_DATE)
        sleep(4)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(3)
        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Filter dataset by Date is successful",
                          attachment_type=AttachmentType.PNG)
            assert True, "Filter dataset by Date is successful"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to filter catgeory by Date",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to filter dataset by Date"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")

    @allure.description("Testing Clear all button")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_Clear_all_Button(self):
        self.loginpage = Loginpage(self.driver)
        sleep(3)
        self.driver.execute_script("window.localStorage.clear();")
        sleep(3)
        self.driver.execute_script("window.location.reload(true);")
        sleep(2)
        self.driver.maximize_window()
        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.USERNAME_FIELD)
        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)
        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)
        sleep(2)
        self.loginpage.do_click(Loginpage.ENTER_OTP)
        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)
        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)
        sleep(3)
        self.datasets_page = Datasetspage(self.driver)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.DATASET_TAB)
        sleep(2)
        self.datasets_page.do_click(Datasetspage.FILTER_CATEGORY)
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.datasets_page.do_click_checkbox_filter_Subcategories()
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,300);")
        sleep(2)
        self.driver.execute_script("window.scrollBy(0,-300);")
        sleep(2)
        self.datasets_page.do_click(Datasetspage.CLEAR_ALL_BUTTON_FILTERS)
        sleep(3)
        if self.driver.current_url == "https://datahubethstage.farmstack.co/datahub/new_datasets":
            allure.attach(self.driver.get_screenshot_as_png(), name="Filter dataset by Date is successful",
                          attachment_type=AttachmentType.PNG)
            assert True, "Filter dataset by Date is successful"
        else:
            allure.attach(self.driver.get_screenshot_as_png(), name="Failed to filter catgeory by Date",
                          attachment_type=AttachmentType.PNG)
            assert False, "Failed to filter dataset by Date"
        self.datasets_page.do_click(Datasetspage.SIGN_OUT_BUTTON)
        print("Completed Test Case")
